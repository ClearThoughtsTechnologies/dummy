/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.13).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Company;
import io.swagger.model.Drive;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-10-17T12:40:01.504Z[GMT]")
@Api(value = "drive", description = "the drive API")
public interface DriveApi {

    @ApiOperation(value = "", nickname = "driveDriveIdGet", notes = "Return specified drive object", response = Company.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "specified drive details", response = Company.class),
        @ApiResponse(code = 404, message = "") })
    @RequestMapping(value = "/drive/driveId",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Company> driveDriveIdGet();


    @ApiOperation(value = "", nickname = "driveGet", notes = "Get all drive listing", response = Drive.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "List of drive object", response = Drive.class) })
    @RequestMapping(value = "/drive",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Drive> driveGet(@ApiParam(value = "page number") @Valid @RequestParam(value = "pageNum", required = false) Integer pageNum,@ApiParam(value = "No of elements in page") @Valid @RequestParam(value = "noOfElements", required = false) Integer noOfElements);


    @ApiOperation(value = "", nickname = "drivePost", notes = "Create a new drive", response = Drive.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "specified company details", response = Drive.class) })
    @RequestMapping(value = "/drive",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Drive> drivePost(@ApiParam(value = ""  )  @Valid @RequestBody Drive body);


    @ApiOperation(value = "", nickname = "drivePut", notes = "Modify a drive", response = Drive.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "specified company details", response = Drive.class) })
    @RequestMapping(value = "/drive",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Drive> drivePut(@ApiParam(value = ""  )  @Valid @RequestBody Drive body);

}
