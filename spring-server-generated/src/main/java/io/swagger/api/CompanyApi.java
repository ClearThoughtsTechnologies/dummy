/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.13).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Company;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-10-17T12:40:01.504Z[GMT]")
@Api(value = "company", description = "the company API")
public interface CompanyApi {

    @ApiOperation(value = "", nickname = "companyCompanyIdGet", notes = "Return specified company object", response = Company.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "specified company details", response = Company.class),
        @ApiResponse(code = 404, message = "") })
    @RequestMapping(value = "/company/companyId",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Company> companyCompanyIdGet();


    @ApiOperation(value = "", nickname = "companyGet", notes = "Get all company listing", response = Company.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "List of company object", response = Company.class) })
    @RequestMapping(value = "/company",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Company> companyGet(@ApiParam(value = "page number") @Valid @RequestParam(value = "pageNum", required = false) Integer pageNum,@ApiParam(value = "No of elements in page") @Valid @RequestParam(value = "noOfElements", required = false) Integer noOfElements);


    @ApiOperation(value = "", nickname = "companyPost", notes = "create new company entry", response = Company.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "A newly created company", response = Company.class) })
    @RequestMapping(value = "/company",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Company> companyPost(@ApiParam(value = ""  )  @Valid @RequestBody Company body);


    @ApiOperation(value = "", nickname = "companyPut", notes = "modify company", response = Company.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Modified company details", response = Company.class) })
    @RequestMapping(value = "/company",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Company> companyPut(@ApiParam(value = ""  )  @Valid @RequestBody Company body);

}
